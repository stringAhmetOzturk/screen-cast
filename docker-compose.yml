version: '3'

services:
  mysqldb:
    image: mysql:8.0
    container_name: mysqlcontainer
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    volumes:
      - ./dbinit/init.sql:/docker-entrypoint-initdb.d/0_init.sql
      - $HOME/database:/var/lib/mysql
    ports:
      - "${DB_PORT}:3306"
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      SERVICE_TAGS: prod
      SERVICE_NAME: mysqldb
    networks:
      - internalnet

  nodeapp:
    container_name: nodeappcontainer
    build: ./server
    image: nodeapp:v1
    volumes:
      - $HOME/app/server:/server
    ports:
      - "${SERVER_PORT}:4000"
    expose:
      - 4000
    environment:
      DB_HOST: mysqldb
      DB_PORT: "${DB_PORT}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_NAME: "${DB_NAME}"
      DB_CONNECTION_LIMIT: "${DB_CONNECTION_LIMIT}"
      API_TOKEN: "${API_TOKEN}"
      SERVICE_TAGS: prod
      SERVICE_NAME: nodeappservice
      SERVER_PORT: "${SERVER_PORT}"
    depends_on:
      - mysqldb
    networks:
      - internalnet

  reactapp:
    container_name: reactappcontainer
    build: ./web
    image: reactapp:v1
    volumes:
      - $HOME/app/web:/web
    ports:
      - "${REACT_APP_FRONTEND_PORT}:3001"
    expose:
      - 3001
    environment:
      REACT_APP_API_URL: "${REACT_APP_API_URL}"
      REACT_APP_SOCKET_URL: "${REACT_APP_SOCKET_URL}"
      REACT_APP_API_TOKEN: "${REACT_APP_API_TOKEN}"
      REACT_APP_FRONTEND_PORT: "${REACT_APP_FRONTEND_PORT}"
      SERVICE_TAGS: prod
      SERVICE_NAME: reactappservice
    depends_on:
      - nodeapp
    networks:
      - internalnet

networks:
  internalnet:
    driver: bridge
